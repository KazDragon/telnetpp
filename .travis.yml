language: cpp
sudo: false

compiler:
  - clang

#env:
#  - CONFIG=Release SHARED=1 CCOMPILE=clang CXXCOMPILE=clang++
#  - CONFIG=Release SHARED=0 CCOMPILE=clang CXXCOMPILE=clang++
#  - CONFIG=Debug SHARED=1 CCOMPILE=clang CXXCOMPILE=clang++
#  - CONFIG=Debug SHARED=0 CCOMPILE=clang CXXCOMPILE=clang++

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - clang
      - gcc-4.8
      - g++-4.8
      - libgtest-dev
      - libboost1.55-all-dev

matrix:
  include:

    # g++-5.2 with coverage
    - compiler: g++
      env: CONFIG=Debug SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=ON
      addons:
        apt:
          sources: *sources
          packages:
            - clang
            - gcc-5
            - g++-5
            - libgtest-dev
            - libboost1.55-all-dev

    # g++-5.2
#    - compiler: g++
#      env: CONFIG=Release SHARED=1 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=OFF
#      addons:
#        apt:
#          sources: *sources
#          packages:
#            - clang
#            - gcc-5
#            - g++-5
#            - libgtest-dev
#            - libboost1.55-all-dev
#
#    - compiler: g++
#      env: CONFIG=Release SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=OFF
#      addons:
#        apt:
#          sources: *sources
#          packages:
#            - clang
#            - gcc-5
#            - g++-5
#            - libgtest-dev
#            - libboost1.55-all-dev
#
#    - compiler: g++
#      env: CONFIG=Debug SHARED=1 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=OFF
#      addons:
#        apt:
#          sources: *sources
#          packages:
#            - clang
#            - gcc-5
#            - g++-5
#            - libgtest-dev
#            - libboost1.55-all-dev
#
#    - compiler: g++
#      env: CONFIG=Debug SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=OFF
#      addons:
#        apt:
#          sources: *sources
#          packages:
#            - clang
#            - gcc-5
#            - g++-5
#            - libgtest-dev
#            - libboost1.55-all-dev
#
cache:
  - apt: true
  - directories:
    - cmake-3.4.0-Linux-x86_64
    - lcov
    - gtest

before_install:
# workaround for not having CMake 3.4
  - if [ ! -d "cmake-3.4.0-Linux-x86_64/bin" ]; then
      wget --no-check-certificate https://cmake.org/files/v3.4/cmake-3.4.0-Linux-x86_64.tar.gz;
      tar -xzf cmake-3.4.0-Linux-x86_64.tar.gz;
    fi
  - export CMAKE=../cmake-3.4.0-Linux-x86_64/bin/cmake
# workaround for not having lcov 1.12
  - if [ ! -d "lcov/usr/bin/lcov"]; then
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.12.orig.tar.gz
      tar -xzf lcov_1.12.orig.tar.gz
      mkdir lcov
      PREFIX=$HOME/lcov make -C lcov_1.12/ install
    fi
  - export LCOV=$HOME/lcov/usr/bin/lcov
# workaround for gtest not providing its own libraries (sigh)
  - if [ ! -d "gtest/libgtest.a" ]; then
      cd gtest;
      CC=$CCOMPILE CXX=$CXXCOMPILE $CMAKE /usr/src/gtest && make;
      cd ..;
    fi
  - export GTEST_ROOT=$PWD/gtest
# install coverage software (todo: only if coverage=1)
  - gem install coveralls-lcov

before_script:
  - mkdir build
  - cd build
  - CC=$CCOMPILE CXX=$CXXCOMPILE $CMAKE -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DTELNETPP_COVERAGE=$COVERAGE ..

script:
  - make -j2
  - make test

after_failure:
  - cat Testing/Temporary/LastTest.log

after_success:
#todo: master only
  - $LCOV --directory . --capture --output-file coverage.info # capture coverage info
  - $LCOV --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
  - $LCOV --list coverage.info # debug before upload
  - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info # uploads to coveralls

notifications:
  email:
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always
  slack:
    rooms:
      - kazdragon:E8B4Cs4p3TiVLqHAq8wYYTr3#ci

